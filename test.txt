diff --git a/grambank/__init__.py b/grambank/__init__.py
index ad39837..af6be0e 100644
--- a/grambank/__init__.py
+++ b/grambank/__init__.py
@@ -3,11 +3,17 @@ from pyramid.config import Configurator
 from clld.interfaces import IValue, IDomainElement, IMapMarker, IValueSet
 
 from clld_glottologfamily_plugin.util import LanguageByFamilyMapMarker
+from clld.web.adapters.cldf import CldfDownload
 
 # we must make sure custom models are known at database initialization!
 from grambank import models
 from grambank import views
 
+from clld.db.models import common
+
+_ = lambda s: s
+_('Parameters')
+_('Parameter')
 
 class MyMapMarker(LanguageByFamilyMapMarker):
     def get_icon(self, ctx, req):
@@ -22,12 +28,22 @@ class MyMapMarker(LanguageByFamilyMapMarker):
 
 def main(global_config, **settings):
     """ This function returns a Pyramid WSGI application.
-    """
+    """    
     config = Configurator(settings=settings)
     config.include('clldmpg')
     config.include('clld_glottologfamily_plugin')
+    
     config.registry.settings['home_comp'].append('coverage')
     config.add_route('coverage', pattern='/coverage')
     config.add_view(views.coverage, route_name='coverage', renderer='coverage.mako')
+
+    config.registry.settings['home_comp'].append('stability')
+    config.add_route('stability', pattern='/stability')
+    config.add_view(views.stability, route_name='stability', renderer='stability.mako')
+    
     config.registry.registerUtility(MyMapMarker(), IMapMarker)
+
+    root_package = config.root_package.__name__
+    config.register_download(CldfDownload(common.Dataset, root_package))
+    #TODO
     return config.make_wsgi_app()
diff --git a/grambank/scripts/initializedb.py b/grambank/scripts/initializedb.py
index 646316c..d3f51f1 100644
--- a/grambank/scripts/initializedb.py
+++ b/grambank/scripts/initializedb.py
@@ -40,7 +40,7 @@ def main(args):
     #parameter = data['Parameter'].get(row['Feature_ID'])
 
     load_families(data, data['GrambankLanguage'].values(), isolates_icon='tcccccc')
-
+    
 
 def prime_cache(args):
     """If data needs to be denormalized for lookup, do that here.
diff --git a/grambank/templates/coverage.mako b/grambank/templates/coverage.mako
index 77041a8..ce28714 100644
--- a/grambank/templates/coverage.mako
+++ b/grambank/templates/coverage.mako
@@ -6,9 +6,9 @@
     <thead>
         <tr>
             <th></th>
-            <th colspan="3">Families with grammar</th>
-            <th colspan="3">Families with grammar sketch</th>
-            <th colspan="3">Total</th>
+            <th colspan="3" style="text-align:center;">Families with grammar</th>
+            <th colspan="3" style="text-align:center;">Families with grammar sketch</th>
+            <th colspan="3" style="text-align:center;">Total</th>
         </tr>
         <tr>
             <th>Macroarea</th>
@@ -32,8 +32,8 @@
             <td>
                 <img src="${u.coverage_badge(data['grammar']['glottolog'], data['grammar']['grambank'])}"/>
             </td>
-            <td class="right">${data['grammar']['glottolog']}</td>
-            <td class="right">${data['grammar']['grambank']}</td>
+            <td class="right">${data['grammarsketch']['glottolog']}</td>
+            <td class="right">${data['grammarsketch']['grambank']}</td>
             <td>
                 <img src="${u.coverage_badge(data['grammarsketch']['glottolog'], data['grammarsketch']['grambank'])}"/>
             </td>
diff --git a/grambank/views.py b/grambank/views.py
index efcbf6c..df1eb7c 100644
--- a/grambank/views.py
+++ b/grambank/views.py
@@ -1,33 +1,44 @@
 from collections import defaultdict
 
 from sqlalchemy import select
+from sqlalchemy.orm import joinedload
 from pyramid.asset import abspath_from_asset_spec
+from pyramid.view import view_config
 
 from clld.util import jsonload
 from clld.db.meta import DBSession
-from clld.db.models.common import Language
+from clld.db.models.common import Language, Value, ValueSet
 from clld_glottologfamily_plugin.models import Family
 
 from grambank.maps import IsoGlossMap
 #from stats_util import parsimony_stability
 
-from clld import RESOURCES
 from clld.db.meta import DBSession
 from models import GrambankLanguage, Feature
 
+@view_config(route_name='stability', renderer='stability.mako')
+def stability(req):
+    lfv = DBSession.query(Value).join(Value.valueset)\
+            .options(
+            joinedload(Value.valueset, ValueSet.language),
+            joinedload(Value.domainelement)
+        ) #.order_by(ValueSet.language_pk, ValueSet.parameter_pk, Value.pk)
+    
+    #lfv = DBSession.query(GrambankLanguage.id, Feature.id).options(joinedload_all(Family.genera, Genus.languages))#, ValueSet.id
+    #lfv = []
+    #trp = [(v.valueset.language.id, v.valueset.language.id, v.id) for v in lfv]
+    trp = [(v.id,) for v in lfv]
+    return {'data': trp[:10], 'map': IsoGlossMap(None, req)}
 
 def about(req):
     return {'data': req, 'map': IsoGlossMap(None, req)}
 
-def introduction(req):
-    data = [k for k in DBSession.query(GrambankLanguage.id, Feature.id)]
-    #data = [rsc for rsc in RESOURCES if rsc.name in ['language']]
-    return {'data': [len(data)] + data, 'map': IsoGlossMap(None, req)}
 
 def coverage(req):
     gl = jsonload(abspath_from_asset_spec('grambank:static/stats_glottolog.json'))
 
     stats = defaultdict(lambda: defaultdict(lambda: defaultdict(int)))
+    stats['Total'] = {'grammar': defaultdict(int), 'grammarsketch': defaultdict(int), 'total': defaultdict(int)}
     for ma in gl:
         for dt in gl[ma]:
             ids = gl[ma][dt]
@@ -43,4 +54,7 @@ def coverage(req):
         for src in ['glottolog', 'grambank']:
             stats[ma]['total'][src] = \
                 stats[ma]['grammar'][src] + stats[ma]['grammarsketch'][src]
+            for dt in ['grammar', 'grammarsketch', 'total']:
+                stats['Total'][dt][src] = stats['Total'][dt].get(src, 0) + stats[ma][dt][src]
+                
     return dict(stats=stats)
